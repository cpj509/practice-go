package function

// // recursive
// func fact(n int) int {
// 	if n == 0 {
// 		return 1
// 	}
// 	return n * fact(n-1)
// }

// // 클로저
// func intSeq() func() int {
// 	i := 0
// 	return func() int {
// 		i += 1
// 		return i
// 	}
// }

// // 가변함수
// func sum(nums ...int) {
// 	fmt.Print(nums, " ")
// 	total := 0
// 	for _, num := range nums {
// 		total += num
// 	}
// 	fmt.Println(total)
// }

// // 다중반환값
// func vals() (int, int) {
// 	return 3, 4
// }

// // 함수
// func plus(a int, b int) int {
// 	return a + b
// }
// func plusplus(a int, b int, c int) int {
// 	return a + b + c
// }

func function() {
	// // recursive
	// fmt.Println(fact(5))

	// // 클로저
	// nextInt := intSeq()
	// fmt.Println(nextInt())
	// fmt.Println(nextInt())
	// fmt.Println(nextInt())
	// newInt := intSeq()
	// fmt.Println(newInt())

	// // 가변함수
	// sum(1, 2)
	// sum(1, 2, 3)
	// nums := []int{1, 2, 3, 4}
	// sum(nums...)

	// // 다중반환값
	// a, b := vals()
	// fmt.Println(a, b)
	// _, c := vals()
	// fmt.Println(c)

	// // 함수
	// res := plus(1, 2)
	// fmt.Println(res)
	// res = plusplus(1, 2, 3)
	// fmt.Println(res)
}
